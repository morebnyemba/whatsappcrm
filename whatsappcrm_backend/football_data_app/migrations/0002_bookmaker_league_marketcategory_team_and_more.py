# Generated by Django 5.1.7 on 2025-06-04 12:59

import django.core.validators
import django.db.models.deletion
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('football_data_app', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Bookmaker',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('api_bookmaker_id', models.IntegerField(db_index=True, unique=True)),
                ('name', models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='League',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('api_league_id', models.IntegerField(db_index=True, unique=True)),
                ('name', models.CharField(max_length=255)),
                ('country', models.CharField(blank=True, max_length=100, null=True)),
                ('logo_url', models.URLField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='MarketCategory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True)),
                ('description', models.TextField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Team',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('api_team_id', models.IntegerField(db_index=True, unique=True)),
                ('name', models.CharField(max_length=255)),
                ('code', models.CharField(blank=True, max_length=10, null=True)),
                ('logo_url', models.URLField(blank=True, null=True)),
                ('country', models.CharField(blank=True, max_length=100, null=True)),
            ],
        ),
        migrations.AlterModelOptions(
            name='footballfixture',
            options={'ordering': ['match_date']},
        ),
        migrations.RenameField(
            model_name='footballfixture',
            old_name='away_score',
            new_name='away_team_score',
        ),
        migrations.RenameField(
            model_name='footballfixture',
            old_name='home_score',
            new_name='home_team_score',
        ),
        migrations.RenameField(
            model_name='footballfixture',
            old_name='updated_at',
            new_name='last_updated_from_api',
        ),
        migrations.RenameField(
            model_name='footballfixture',
            old_name='match_datetime_utc',
            new_name='match_date',
        ),
        migrations.RemoveField(
            model_name='footballfixture',
            name='away_team_name',
        ),
        migrations.RemoveField(
            model_name='footballfixture',
            name='away_team_short_name',
        ),
        migrations.RemoveField(
            model_name='footballfixture',
            name='competition_code',
        ),
        migrations.RemoveField(
            model_name='footballfixture',
            name='competition_name',
        ),
        migrations.RemoveField(
            model_name='footballfixture',
            name='created_at',
        ),
        migrations.RemoveField(
            model_name='footballfixture',
            name='home_team_name',
        ),
        migrations.RemoveField(
            model_name='footballfixture',
            name='home_team_short_name',
        ),
        migrations.RemoveField(
            model_name='footballfixture',
            name='last_api_update',
        ),
        migrations.RemoveField(
            model_name='footballfixture',
            name='status',
        ),
        migrations.RemoveField(
            model_name='footballfixture',
            name='winner',
        ),
        migrations.AddField(
            model_name='footballfixture',
            name='api_fixture_timestamp',
            field=models.DateTimeField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name='footballfixture',
            name='extratime_away_score',
            field=models.IntegerField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name='footballfixture',
            name='extratime_home_score',
            field=models.IntegerField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name='footballfixture',
            name='halftime_away_score',
            field=models.IntegerField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name='footballfixture',
            name='halftime_home_score',
            field=models.IntegerField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name='footballfixture',
            name='is_result_confirmed',
            field=models.BooleanField(db_index=True, default=False),
        ),
        migrations.AddField(
            model_name='footballfixture',
            name='penalty_away_score',
            field=models.IntegerField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name='footballfixture',
            name='penalty_home_score',
            field=models.IntegerField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name='footballfixture',
            name='referee',
            field=models.CharField(blank=True, max_length=255, null=True),
        ),
        migrations.AddField(
            model_name='footballfixture',
            name='round',
            field=models.CharField(blank=True, max_length=100, null=True),
        ),
        migrations.AddField(
            model_name='footballfixture',
            name='status_long',
            field=models.CharField(max_length=100, null=True),
        ),
        migrations.AddField(
            model_name='footballfixture',
            name='status_short',
            field=models.CharField(db_index=True, default='unknown', max_length=10),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name='footballfixture',
            name='venue_name',
            field=models.CharField(blank=True, max_length=255, null=True),
        ),
        migrations.AlterField(
            model_name='footballfixture',
            name='match_api_id',
            field=models.CharField(db_index=True, max_length=100, unique=True),
        ),
        migrations.CreateModel(
            name='Bet',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('stake', models.DecimalField(decimal_places=2, max_digits=10, validators=[django.core.validators.MinValueValidator(0.01)])),
                ('potential_winnings', models.DecimalField(blank=True, decimal_places=2, max_digits=12, null=True)),
                ('actual_winnings', models.DecimalField(blank=True, decimal_places=2, max_digits=12, null=True)),
                ('total_odds', models.DecimalField(blank=True, decimal_places=3, max_digits=10, null=True)),
                ('bet_type', models.CharField(choices=[('SINGLE', 'Single'), ('ACCUMULATOR', 'Accumulator')], default='SINGLE', max_length=20)),
                ('status', models.CharField(choices=[('PENDING', 'Pending'), ('WON', 'Won'), ('LOST', 'Lost'), ('VOIDED', 'Voided'), ('CASHED_OUT', 'Cashed Out')], db_index=True, default='PENDING', max_length=20)),
                ('placed_at', models.DateTimeField(auto_now_add=True, db_index=True)),
                ('settled_at', models.DateTimeField(blank=True, db_index=True, null=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='bets', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-placed_at'],
            },
        ),
        migrations.AddField(
            model_name='footballfixture',
            name='league',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='fixtures', to='football_data_app.league'),
        ),
        migrations.CreateModel(
            name='Market',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('market_parameter', models.CharField(blank=True, help_text='e.g., 2.5 for Over/Under, -1.5 for Handicap', max_length=50, null=True)),
                ('is_active', models.BooleanField(db_index=True, default=True)),
                ('last_updated_odds_api', models.DateTimeField(blank=True, null=True)),
                ('bookmaker', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='markets', to='football_data_app.bookmaker')),
                ('fixture', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='markets', to='football_data_app.footballfixture')),
                ('category', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='markets', to='football_data_app.marketcategory')),
            ],
            options={
                'ordering': ['fixture', 'category', 'market_parameter'],
                'unique_together': {('fixture', 'bookmaker', 'category', 'market_parameter')},
            },
        ),
        migrations.CreateModel(
            name='MarketOutcome',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('outcome_name', models.CharField(max_length=255)),
                ('odds', models.DecimalField(decimal_places=3, max_digits=8)),
                ('result_status', models.CharField(choices=[('PENDING', 'Pending'), ('WIN', 'Win'), ('LOSS', 'Loss'), ('VOID', 'Void/Push')], db_index=True, default='PENDING', max_length=10)),
                ('is_suspended', models.BooleanField(default=False)),
                ('market', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='outcomes', to='football_data_app.market')),
            ],
            options={
                'ordering': ['market', 'outcome_name'],
                'unique_together': {('market', 'outcome_name')},
            },
        ),
        migrations.AddField(
            model_name='footballfixture',
            name='away_team',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='away_fixtures', to='football_data_app.team'),
        ),
        migrations.AddField(
            model_name='footballfixture',
            name='home_team',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='home_fixtures', to='football_data_app.team'),
        ),
        migrations.CreateModel(
            name='UserWallet',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('balance', models.DecimalField(decimal_places=2, default=0.0, max_digits=12, validators=[django.core.validators.MinValueValidator(0)])),
                ('bonus_balance', models.DecimalField(decimal_places=2, default=0.0, max_digits=12, validators=[django.core.validators.MinValueValidator(0)])),
                ('last_updated', models.DateTimeField(auto_now=True)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='wallet', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Transaction',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('transaction_type', models.CharField(choices=[('DEPOSIT', 'Deposit'), ('WITHDRAWAL', 'Withdrawal'), ('BET_PLACEMENT', 'Bet Placement'), ('BET_WINNING', 'Bet Winning'), ('BET_REFUND', 'Bet Refund/Void'), ('BONUS_AWARD', 'Bonus Awarded')], max_length=20)),
                ('amount', models.DecimalField(decimal_places=2, max_digits=12)),
                ('timestamp', models.DateTimeField(auto_now_add=True, db_index=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('related_bet_id', models.CharField(blank=True, db_index=True, max_length=36, null=True)),
                ('balance_before', models.DecimalField(decimal_places=2, max_digits=12, null=True)),
                ('balance_after', models.DecimalField(decimal_places=2, max_digits=12, null=True)),
                ('wallet', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='transactions', to='football_data_app.userwallet')),
            ],
        ),
        migrations.CreateModel(
            name='BetSelection',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('odds_at_placement', models.DecimalField(decimal_places=3, max_digits=8)),
                ('result_status', models.CharField(choices=[('PENDING', 'Pending'), ('WIN', 'Win'), ('LOSS', 'Loss'), ('VOID', 'Void/Push')], db_index=True, default='PENDING', max_length=10)),
                ('fixture_description', models.CharField(blank=True, help_text='e.g., Man Utd vs Chelsea', max_length=255, null=True)),
                ('market_description', models.CharField(blank=True, help_text='e.g., Match Winner', max_length=255, null=True)),
                ('outcome_description', models.CharField(blank=True, help_text='e.g., Home', max_length=255, null=True)),
                ('bet', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='selections', to='football_data_app.bet')),
                ('market_outcome', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='football_data_app.marketoutcome')),
            ],
            options={
                'unique_together': {('bet', 'market_outcome')},
            },
        ),
    ]
