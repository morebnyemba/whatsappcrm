# Generated by Django 5.2.3 on 2025-06-22 04:26

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Bookmaker',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('api_bookmaker_key', models.CharField(help_text='The unique key for the bookmaker from the API.', max_length=50, unique=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Bookmaker',
                'verbose_name_plural': 'Bookmakers',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Configuration',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('provider_name', models.CharField(default='The Odds API', help_text='For Now We only Support The Odds Api(the-odds-api.com)', max_length=50)),
                ('email', models.EmailField(max_length=254)),
                ('api_key', models.CharField(max_length=50)),
            ],
            options={
                'verbose_name': 'Configuration',
                'verbose_name_plural': 'Configurations',
            },
        ),
        migrations.CreateModel(
            name='League',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('api_id', models.CharField(help_text="The unique key for the league from the API (e.g., 'soccer_epl').", max_length=100, unique=True)),
                ('sport_key', models.CharField(help_text="The general sport key, e.g., 'soccer'.", max_length=50)),
                ('sport_group_name', models.CharField(blank=True, help_text="The general sport group name from the API, e.g., 'Soccer'.", max_length=100, null=True)),
                ('short_name', models.CharField(blank=True, help_text='Short name or title for the league from API (e.g., EPL).', max_length=50, null=True)),
                ('api_description', models.TextField(blank=True, help_text='Full description of the league from the API, if different from name.', null=True)),
                ('active', models.BooleanField(default=True, help_text='Whether this league is currently tracked for updates.')),
                ('logo_url', models.URLField(blank=True, help_text="URL for the league's logo.", max_length=512, null=True)),
                ('last_fetched_events', models.DateTimeField(blank=True, help_text='Timestamp of the last successful event fetch for this league.', null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'League',
                'verbose_name_plural': 'Leagues',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='MarketCategory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True)),
                ('description', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Market Category',
                'verbose_name_plural': 'Market Categories',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Team',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True)),
                ('api_team_id', models.CharField(blank=True, help_text='Unique team ID from the API, if available. May not always be provided.', max_length=100, null=True)),
                ('logo_url', models.URLField(blank=True, help_text="URL for the team's logo.", max_length=512, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Team',
                'verbose_name_plural': 'Teams',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='FootballFixture',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('api_id', models.CharField(blank=True, help_text='The unique event ID from The Odds API.', max_length=100, null=True, unique=True)),
                ('match_date', models.DateTimeField(blank=True, help_text='The scheduled start time of the fixture.', null=True)),
                ('status', models.CharField(choices=[('SCHEDULED', 'Scheduled'), ('LIVE', 'Live'), ('FINISHED', 'Finished'), ('POSTPONED', 'Postponed'), ('CANCELLED', 'Cancelled')], default='SCHEDULED', max_length=20)),
                ('home_team_score', models.IntegerField(blank=True, null=True)),
                ('away_team_score', models.IntegerField(blank=True, null=True)),
                ('last_odds_update', models.DateTimeField(blank=True, help_text='Timestamp of the last successful odds fetch.', null=True)),
                ('last_score_update', models.DateTimeField(blank=True, help_text='Timestamp of the last successful score fetch.', null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('league', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='fixtures', to='football_data_app.league')),
                ('away_team', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='away_fixtures', to='football_data_app.team')),
                ('home_team', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='home_fixtures', to='football_data_app.team')),
            ],
            options={
                'verbose_name': 'Football Fixture',
                'verbose_name_plural': 'Football Fixtures',
                'ordering': ['-match_date'],
            },
        ),
        migrations.CreateModel(
            name='Market',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('api_market_key', models.CharField(help_text="The market key from the API, e.g., 'h2h', 'totals'.", max_length=50)),
                ('last_updated_odds_api', models.DateTimeField(help_text='Timestamp of the market update from the API.')),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('bookmaker', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='markets', to='football_data_app.bookmaker')),
                ('fixture', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='markets', to='football_data_app.footballfixture')),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='markets', to='football_data_app.marketcategory')),
            ],
            options={
                'verbose_name': 'Market',
                'verbose_name_plural': 'Markets',
                'ordering': ['fixture', 'category'],
                'unique_together': {('fixture', 'bookmaker', 'api_market_key')},
            },
        ),
        migrations.CreateModel(
            name='MarketOutcome',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('outcome_name', models.CharField(help_text="The name of the outcome (e.g., 'Manchester United', 'Over').", max_length=100)),
                ('odds', models.DecimalField(decimal_places=3, max_digits=10)),
                ('point_value', models.FloatField(blank=True, help_text='The point value for spread or totals markets (e.g., 2.5 for Over/Under).', null=True)),
                ('result_status', models.CharField(choices=[('PENDING', 'Pending'), ('WON', 'Won'), ('LOST', 'Lost'), ('PUSH', 'Push / Void')], default='PENDING', max_length=10)),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('market', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='outcomes', to='football_data_app.market')),
            ],
            options={
                'verbose_name': 'Market Outcome',
                'verbose_name_plural': 'Market Outcomes',
                'ordering': ['market', 'outcome_name'],
            },
        ),
    ]
