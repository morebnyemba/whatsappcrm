# Generated by Django 5.1.7 on 2025-05-18 05:06

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='MetaAppConfig',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text="A descriptive name for this configuration (e.g., 'Primary Business Account', 'Test Account')", max_length=100, unique=True)),
                ('verify_token', models.CharField(help_text='The verify token you set in the Meta App Dashboard for webhook verification.', max_length=255)),
                ('access_token', models.TextField(help_text='The Page Access Token or System User Token for sending messages.')),
                ('phone_number_id', models.CharField(help_text='The Phone Number ID from which messages will be sent.', max_length=50)),
                ('waba_id', models.CharField(help_text='Your WhatsApp Business Account ID.', max_length=50, verbose_name='WhatsApp Business Account ID (WABA ID)')),
                ('api_version', models.CharField(default='v19.0', help_text="The Meta Graph API version (e.g., 'v19.0').", max_length=10)),
                ('is_active', models.BooleanField(default=False, help_text='Set to True if this is the currently active configuration. Only one configuration should be active.')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Meta App Configuration',
                'verbose_name_plural': 'Meta App Configurations',
                'ordering': ['-is_active', 'name'],
            },
        ),
        migrations.CreateModel(
            name='WebhookEventLog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('event_identifier', models.CharField(blank=True, db_index=True, help_text='A unique identifier for the event if available (e.g., wamid for messages).', max_length=255, null=True)),
                ('waba_id_received', models.CharField(blank=True, help_text='WABA ID from the webhook payload.', max_length=50, null=True)),
                ('phone_number_id_received', models.CharField(blank=True, help_text='Phone Number ID from the webhook payload.', max_length=50, null=True)),
                ('event_type', models.CharField(choices=[('message', 'Message Received'), ('message_status', 'Message Status Update'), ('template_status', 'Message Template Status Update'), ('account_update', 'Account Update'), ('referral', 'Referral Event'), ('system', 'System Message'), ('flow_response', 'Flow Response'), ('security', 'Security Notification'), ('error', 'Error Notification'), ('unknown', 'Unknown Event Type')], default='unknown', help_text='Categorized type of the webhook event.', max_length=50)),
                ('payload_object_type', models.CharField(blank=True, help_text="The 'object' type from the webhook payload (e.g., 'whatsapp_business_account').", max_length=100, null=True)),
                ('payload', models.JSONField(help_text='Full JSON payload received from Meta.')),
                ('received_at', models.DateTimeField(auto_now_add=True, db_index=True)),
                ('processed_at', models.DateTimeField(blank=True, help_text='Timestamp when the event was processed by a handler.', null=True)),
                ('processing_status', models.CharField(default='pending', help_text='Processing status (e.g., pending, processed, error, ignored).', max_length=50)),
                ('processing_notes', models.TextField(blank=True, help_text='Notes or error messages from processing.', null=True)),
                ('app_config', models.ForeignKey(blank=True, help_text='Configuration used when this event was received, if identifiable.', null=True, on_delete=django.db.models.deletion.SET_NULL, to='meta_integration.metaappconfig')),
            ],
            options={
                'verbose_name': 'Webhook Event Log',
                'verbose_name_plural': 'Webhook Event Logs',
                'ordering': ['-received_at'],
                'indexes': [models.Index(fields=['event_type', 'received_at'], name='meta_integr_event_t_297a83_idx'), models.Index(fields=['processing_status', 'event_type'], name='meta_integr_process_d645ca_idx')],
            },
        ),
    ]
