# Generated by Django 5.1.7 on 2025-05-18 00:33

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('conversations', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Flow',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Unique name for this flow.', max_length=255, unique=True)),
                ('description', models.TextField(blank=True, help_text='A brief description of what this flow does.', null=True)),
                ('is_active', models.BooleanField(default=False, help_text='Is this flow currently active and can be triggered?')),
                ('trigger_keywords', models.JSONField(blank=True, default=list, help_text='List of keywords that can trigger this flow if no other flow is active for the contact.')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='FlowStep',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text="Descriptive name for this step (e.g., 'Welcome Message', 'Ask Email').", max_length=255)),
                ('step_type', models.CharField(choices=[('send_message', 'Send Message'), ('question', 'Ask Question'), ('condition', 'Conditional Branch'), ('action', 'Perform Action'), ('wait_for_reply', 'Wait for Reply'), ('end_flow', 'End Flow'), ('start_flow', 'Start Flow Node')], max_length=50)),
                ('config', models.JSONField(blank=True, default=dict, help_text='JSON configuration for this step, structure depends on step_type.')),
                ('is_entry_point', models.BooleanField(default=False, help_text='Is this the first step of the flow? Only one step per flow should be an entry point.')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('flow', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='steps', to='flows.flow')),
            ],
            options={
                'ordering': ['flow', 'created_at'],
                'unique_together': {('flow', 'name')},
            },
        ),
        migrations.CreateModel(
            name='FlowTransition',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('condition_config', models.JSONField(blank=True, default=dict, help_text='JSON configuration for the condition that triggers this transition.')),
                ('priority', models.IntegerField(default=0, help_text='Order of evaluation for transitions from the same step (lower numbers evaluated first).')),
                ('current_step', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='outgoing_transitions', to='flows.flowstep')),
                ('next_step', models.ForeignKey(help_text='The step to transition to if conditions are met.', on_delete=django.db.models.deletion.CASCADE, related_name='incoming_transitions', to='flows.flowstep')),
            ],
            options={
                'ordering': ['current_step', 'priority'],
            },
        ),
        migrations.CreateModel(
            name='ContactFlowState',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('flow_context_data', models.JSONField(blank=True, default=dict, help_text='Data collected from the user during this flow instance.')),
                ('started_at', models.DateTimeField(auto_now_add=True)),
                ('last_updated_at', models.DateTimeField(auto_now=True)),
                ('contact', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='flow_state', to='conversations.contact')),
                ('current_flow', models.ForeignKey(help_text='The flow this contact is currently engaged in.', on_delete=django.db.models.deletion.CASCADE, to='flows.flow')),
                ('current_step', models.ForeignKey(help_text='The current step the contact is at in this flow.', on_delete=django.db.models.deletion.CASCADE, to='flows.flowstep')),
            ],
            options={
                'verbose_name': 'Contact Flow State',
                'verbose_name_plural': 'Contact Flow States',
                'unique_together': {('contact', 'current_flow')},
            },
        ),
    ]
