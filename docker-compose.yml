version: '3.8'

services:
  db:
    image: postgres:15-alpine
    container_name: whatsappcrm_db # Reverted
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    environment:
      - POSTGRES_DB=${DB_NAME:-whatsapp_crm_dev}
      - POSTGRES_USER=${DB_USER:-crm_user}
      - POSTGRES_PASSWORD=${DB_PASSWORD:-your_strong_password} # Set this in .env
    ports:
      - "${DB_PORT_LOCAL:-5433}:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USER:-crm_user} -d ${DB_NAME:-whatsapp_crm_dev}"]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: unless-stopped

  redis:
    image: redis:7-alpine
    container_name: whatsappcrm_redis # Reverted
    ports:
      - "${REDIS_PORT_LOCAL:-6379}:6379"
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: unless-stopped

  whatsappcrm_backend_app:
    build:
      context: ./whatsappcrm_backend
      dockerfile: Dockerfile
    container_name: whatsappcrm_backend_app # Reverted
    command: ["web"]
    volumes:
      - ./whatsappcrm_backend:/app
      - static_volume:/app/staticfiles
      - media_volume:/app/whatsapp_media_assets
    env_file:
      - ./whatsappcrm_backend/.env
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
    restart: unless-stopped

  whatsappcrm_celery_worker:
    build:
      context: ./whatsappcrm_backend
      dockerfile: Dockerfile
    container_name: whatsappcrm_celery_worker # Reverted
    command: ["celeryworker"]
    volumes:
      - ./whatsappcrm_backend:/app
    env_file:
      - ./whatsappcrm_backend/.env
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
      whatsappcrm_backend_app:
        condition: service_started
    restart: unless-stopped

  whatsappcrm_celery_beat:
    build:
      context: ./whatsappcrm_backend
      dockerfile: Dockerfile
    container_name: whatsappcrm_celery_beat # Reverted
    command: ["celerybeat"]
    volumes:
      - ./whatsappcrm_backend:/app
    env_file:
      - ./whatsappcrm_backend/.env
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
      whatsappcrm_backend_app:
        condition: service_started
    restart: unless-stopped

  whatsappcrm_frontend_app:
    build:
      context: ./whatsapp-crm-frontend
      dockerfile: Dockerfile # Ensure this Dockerfile exists and is correct
    container_name: whatsappcrm_frontend_app # Reverted
    volumes:
      - ./whatsapp-crm-frontend:/app
      - /app/node_modules
    restart: unless-stopped
    # Add ports or expose if Nginx needs to connect to a specific port for dev server
    # For example, if Vite runs on 5173:
    # ports:
    #  - "5173:5173" # Only if you need direct access to frontend dev server from host
    # expose:
    #   - "5173"

  whatsappcrm_nginx_proxy:
    image: nginx:1.25-alpine
    container_name: whatsappcrm_nginx_proxy # Reverted
    ports:
      - "${NGINX_PORT_HTTP:-80}:80"
      # - "${NGINX_PORT_HTTPS:-443}:443" # For HTTPS
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/conf.d:/etc/nginx/conf.d:ro
      # - ./nginx/certs:/etc/nginx/certs:ro # For SSL
      - static_volume:/srv/static:ro # Nginx serving static
      - media_volume:/srv/media:ro   # Nginx serving media (if configured, otherwise Django serves)
    depends_on:
      whatsappcrm_backend_app:
        condition: service_started
      whatsappcrm_frontend_app:
        condition: service_started # Or service_healthy if it has a healthcheck
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "wget -q --spider --proxy=off http://localhost/ || exit 1"]
      interval: 30s
      timeout: 3s
      retries: 3

volumes:
  postgres_data:
  redis_data:
  static_volume:
  media_volume: